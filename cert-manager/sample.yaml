apiVersion: v1
kind: Service
metadata:
  name: sample
  namespace: dev
spec:
  selector:
    app: sample
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample
  namespace: dev
  labels:
    app: sample
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: sample
  template:
    metadata:
      labels:
        app: sample
    spec:
      containers:
      - name: sample
        image: nginx:alpine
        ports:
        - containerPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sample-ingress
  namespace: dev
  annotations:
    kubernetes.io/ingress.class: nginx
    external-dns.alpha.kubernetes.io/ttl: "120"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/configuration-snippet : |
      if ($request_uri = "/") {
        add_header 'Cache-Control' "no-cache, no-store";
      }
spec:
  tls:
  - hosts:
    - app.sample.com
    secretName: sample-com-tls

  rules:
  - host: app.sample.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sample
            port:
              number: 80